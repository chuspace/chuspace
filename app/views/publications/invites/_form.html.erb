<%= turbo_frame_tag dom_id(@invite, :form) do %>
  <%= simple_form_for invite, url: publication_invites_path(@publication), html: { 'data-turbo-frame': :_top } do |f| %>
    <autocomplete-reset>
      <auto-complete
        src="<%= autocomplete_publication_people_path(@publication) %>"
        for="users-popup"
        class='w-full dropdown'
        data-autoselect="true"
      >
        <%= f.input :identifier, label: 'Email or Username', autofocus: true, input_html: { 'data-target': 'autocomplete-reset.input', 'data-action': 'input:autocomplete-reset#toggle' } %>

        <button data-target='autocomplete-reset.handle' class='hidden absolute right-0 bottom-0 mb-4 mr-4' data-action='click:autocomplete-reset#clear'>
          <%= inline_svg_tag('icons/x.svg', class: 'w-4 h-4 fill-current', 'data-action': 'click:autocomplete-reset#clear') %>
        </button>

        <ul id="users-popup" class='shadow menu dropdown-content absolute z-10 bg-base-200 rounded-box w-full'></ul>
        <!--
          Optional div for screen reader feedback. Note the ID matches the ul, but with -feedback appended.
          Recommended: Use a "Screen Reader Only" class to position the element off the visual boundary of the page.
        -->
        <div id="users-popup-feedback" class="sr-only"></div>
      </auto-complete>
    </autocomplete-reset>

    <%= f.input :role, collection: invitable_roles_collection, label_method: :second, value_method: :first, required: true %>

    <div class='mt-8'>
      <%= f.submit 'Invite', class: 'btn btn-primary btn-sm' %>
    </div>
  <% end %>
<% end %>
